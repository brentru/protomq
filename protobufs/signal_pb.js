// source: wippersnapper/signal/v1/signal.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

import jspb from 'google-protobuf'
var goog = jspb;
var global = Function('return this')();

import nanopb_nanopb_pb from './nanopb_pb.js'
goog.object.extend(proto, nanopb_nanopb_pb);
import wippersnapper_pin_v1_pin_pb from './pin_pb.js'
goog.object.extend(proto, wippersnapper_pin_v1_pin_pb);
import wippersnapper_i2c_v1_i2c_pb from './i2c_pb.js'
goog.object.extend(proto, wippersnapper_i2c_v1_i2c_pb);
import wippersnapper_servo_v1_servo_pb from './servo_pb.js'
goog.object.extend(proto, wippersnapper_servo_v1_servo_pb);
import wippersnapper_pwm_v1_pwm_pb from './pwm_pb.js'
goog.object.extend(proto, wippersnapper_pwm_v1_pwm_pb);
import wippersnapper_ds18x20_v1_ds18x20_pb from './ds18x20_pb.js'
goog.object.extend(proto, wippersnapper_ds18x20_v1_ds18x20_pb);
goog.exportSymbol('proto.wippersnapper.signal.v1.CreateSignalRequest', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.CreateSignalRequest.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.Ds18x20Request', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.Ds18x20Request.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.Ds18x20Response', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.Ds18x20Response.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.I2CRequest', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.I2CRequest.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.I2CResponse', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.I2CResponse.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.PWMRequest', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.PWMRequest.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.PWMResponse', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.PWMResponse.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.ServoRequest', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.ServoRequest.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.ServoResponse', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.ServoResponse.PayloadCase', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.SignalResponse', null, global);
goog.exportSymbol('proto.wippersnapper.signal.v1.SignalResponse.PayloadCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.Ds18x20Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.Ds18x20Request.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.Ds18x20Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.Ds18x20Request.displayName = 'proto.wippersnapper.signal.v1.Ds18x20Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.Ds18x20Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.Ds18x20Response.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.Ds18x20Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.Ds18x20Response.displayName = 'proto.wippersnapper.signal.v1.Ds18x20Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.I2CRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.I2CRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.I2CRequest.displayName = 'proto.wippersnapper.signal.v1.I2CRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.I2CResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.I2CResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.I2CResponse.displayName = 'proto.wippersnapper.signal.v1.I2CResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.ServoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.ServoRequest.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.ServoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.ServoRequest.displayName = 'proto.wippersnapper.signal.v1.ServoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.ServoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.ServoResponse.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.ServoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.ServoResponse.displayName = 'proto.wippersnapper.signal.v1.ServoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.CreateSignalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.CreateSignalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.CreateSignalRequest.displayName = 'proto.wippersnapper.signal.v1.CreateSignalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.SignalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.SignalResponse.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.SignalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.SignalResponse.displayName = 'proto.wippersnapper.signal.v1.SignalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.PWMRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.PWMRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.PWMRequest.displayName = 'proto.wippersnapper.signal.v1.PWMRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.signal.v1.PWMResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wippersnapper.signal.v1.PWMResponse.oneofGroups_);
};
goog.inherits(proto.wippersnapper.signal.v1.PWMResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.signal.v1.PWMResponse.displayName = 'proto.wippersnapper.signal.v1.PWMResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.Ds18x20Request.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  REQ_DS18X20_INIT: 1,
  REQ_DS18X20_DEINIT: 2
};

/**
 * @return {proto.wippersnapper.signal.v1.Ds18x20Request.PayloadCase}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.Ds18x20Request.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.Ds18x20Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.Ds18x20Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.Ds18x20Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.Ds18x20Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqDs18x20Init: (f = msg.getReqDs18x20Init()) && wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitRequest.toObject(includeInstance, f),
    reqDs18x20Deinit: (f = msg.getReqDs18x20Deinit()) && wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeInitRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Request}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.Ds18x20Request;
  return proto.wippersnapper.signal.v1.Ds18x20Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.Ds18x20Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Request}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitRequest;
      reader.readMessage(value,wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitRequest.deserializeBinaryFromReader);
      msg.setReqDs18x20Init(value);
      break;
    case 2:
      var value = new wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeInitRequest;
      reader.readMessage(value,wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeInitRequest.deserializeBinaryFromReader);
      msg.setReqDs18x20Deinit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.Ds18x20Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.Ds18x20Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.Ds18x20Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqDs18x20Init();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitRequest.serializeBinaryToWriter
    );
  }
  f = message.getReqDs18x20Deinit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeInitRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.ds18x20.v1.Ds18x20InitRequest req_ds18x20_init = 1;
 * @return {?proto.wippersnapper.ds18x20.v1.Ds18x20InitRequest}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.getReqDs18x20Init = function() {
  return /** @type{?proto.wippersnapper.ds18x20.v1.Ds18x20InitRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitRequest, 1));
};


/**
 * @param {?proto.wippersnapper.ds18x20.v1.Ds18x20InitRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Request} returns this
*/
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.setReqDs18x20Init = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.Ds18x20Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Request} returns this
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.clearReqDs18x20Init = function() {
  return this.setReqDs18x20Init(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.hasReqDs18x20Init = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional wippersnapper.ds18x20.v1.Ds18x20DeInitRequest req_ds18x20_deinit = 2;
 * @return {?proto.wippersnapper.ds18x20.v1.Ds18x20DeInitRequest}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.getReqDs18x20Deinit = function() {
  return /** @type{?proto.wippersnapper.ds18x20.v1.Ds18x20DeInitRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeInitRequest, 2));
};


/**
 * @param {?proto.wippersnapper.ds18x20.v1.Ds18x20DeInitRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Request} returns this
*/
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.setReqDs18x20Deinit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wippersnapper.signal.v1.Ds18x20Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Request} returns this
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.clearReqDs18x20Deinit = function() {
  return this.setReqDs18x20Deinit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.Ds18x20Request.prototype.hasReqDs18x20Deinit = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.Ds18x20Response.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  RESP_DS18X20_INIT: 1,
  RESP_DS18X20_EVENT: 2
};

/**
 * @return {proto.wippersnapper.signal.v1.Ds18x20Response.PayloadCase}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.Ds18x20Response.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.Ds18x20Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.Ds18x20Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.Ds18x20Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.Ds18x20Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    respDs18x20Init: (f = msg.getRespDs18x20Init()) && wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitResponse.toObject(includeInstance, f),
    respDs18x20Event: (f = msg.getRespDs18x20Event()) && wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeviceEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Response}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.Ds18x20Response;
  return proto.wippersnapper.signal.v1.Ds18x20Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.Ds18x20Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Response}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitResponse;
      reader.readMessage(value,wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitResponse.deserializeBinaryFromReader);
      msg.setRespDs18x20Init(value);
      break;
    case 2:
      var value = new wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeviceEvent;
      reader.readMessage(value,wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeviceEvent.deserializeBinaryFromReader);
      msg.setRespDs18x20Event(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.Ds18x20Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.Ds18x20Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.Ds18x20Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRespDs18x20Init();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitResponse.serializeBinaryToWriter
    );
  }
  f = message.getRespDs18x20Event();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeviceEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.ds18x20.v1.Ds18x20InitResponse resp_ds18x20_init = 1;
 * @return {?proto.wippersnapper.ds18x20.v1.Ds18x20InitResponse}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.getRespDs18x20Init = function() {
  return /** @type{?proto.wippersnapper.ds18x20.v1.Ds18x20InitResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20InitResponse, 1));
};


/**
 * @param {?proto.wippersnapper.ds18x20.v1.Ds18x20InitResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Response} returns this
*/
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.setRespDs18x20Init = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.Ds18x20Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Response} returns this
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.clearRespDs18x20Init = function() {
  return this.setRespDs18x20Init(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.hasRespDs18x20Init = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional wippersnapper.ds18x20.v1.Ds18x20DeviceEvent resp_ds18x20_event = 2;
 * @return {?proto.wippersnapper.ds18x20.v1.Ds18x20DeviceEvent}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.getRespDs18x20Event = function() {
  return /** @type{?proto.wippersnapper.ds18x20.v1.Ds18x20DeviceEvent} */ (
    jspb.Message.getWrapperField(this, wippersnapper_ds18x20_v1_ds18x20_pb.Ds18x20DeviceEvent, 2));
};


/**
 * @param {?proto.wippersnapper.ds18x20.v1.Ds18x20DeviceEvent|undefined} value
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Response} returns this
*/
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.setRespDs18x20Event = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wippersnapper.signal.v1.Ds18x20Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.Ds18x20Response} returns this
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.clearRespDs18x20Event = function() {
  return this.setRespDs18x20Event(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.Ds18x20Response.prototype.hasRespDs18x20Event = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.I2CRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  REQ_I2C_INIT: 1,
  REQ_I2C_SCAN: 2,
  REQ_I2C_SET_FREQ: 3,
  REQ_I2C_DEVICE_INIT: 4,
  REQ_I2C_DEVICE_DEINIT: 5,
  REQ_I2C_DEVICE_UPDATE: 6,
  REQ_I2C_DEVICE_INIT_REQUESTS: 7
};

/**
 * @return {proto.wippersnapper.signal.v1.I2CRequest.PayloadCase}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.I2CRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.I2CRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.I2CRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.I2CRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqI2cInit: (f = msg.getReqI2cInit()) && wippersnapper_i2c_v1_i2c_pb.I2CBusInitRequest.toObject(includeInstance, f),
    reqI2cScan: (f = msg.getReqI2cScan()) && wippersnapper_i2c_v1_i2c_pb.I2CBusScanRequest.toObject(includeInstance, f),
    reqI2cSetFreq: (f = msg.getReqI2cSetFreq()) && wippersnapper_i2c_v1_i2c_pb.I2CBusSetFrequency.toObject(includeInstance, f),
    reqI2cDeviceInit: (f = msg.getReqI2cDeviceInit()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequest.toObject(includeInstance, f),
    reqI2cDeviceDeinit: (f = msg.getReqI2cDeviceDeinit()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitRequest.toObject(includeInstance, f),
    reqI2cDeviceUpdate: (f = msg.getReqI2cDeviceUpdate()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateRequest.toObject(includeInstance, f),
    reqI2cDeviceInitRequests: (f = msg.getReqI2cDeviceInitRequests()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequests.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.I2CRequest;
  return proto.wippersnapper.signal.v1.I2CRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.I2CRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CBusInitRequest;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CBusInitRequest.deserializeBinaryFromReader);
      msg.setReqI2cInit(value);
      break;
    case 2:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CBusScanRequest;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CBusScanRequest.deserializeBinaryFromReader);
      msg.setReqI2cScan(value);
      break;
    case 3:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CBusSetFrequency;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CBusSetFrequency.deserializeBinaryFromReader);
      msg.setReqI2cSetFreq(value);
      break;
    case 4:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequest;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequest.deserializeBinaryFromReader);
      msg.setReqI2cDeviceInit(value);
      break;
    case 5:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitRequest;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitRequest.deserializeBinaryFromReader);
      msg.setReqI2cDeviceDeinit(value);
      break;
    case 6:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateRequest;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateRequest.deserializeBinaryFromReader);
      msg.setReqI2cDeviceUpdate(value);
      break;
    case 7:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequests;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequests.deserializeBinaryFromReader);
      msg.setReqI2cDeviceInitRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.I2CRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.I2CRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.I2CRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqI2cInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CBusInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getReqI2cScan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CBusScanRequest.serializeBinaryToWriter
    );
  }
  f = message.getReqI2cSetFreq();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CBusSetFrequency.serializeBinaryToWriter
    );
  }
  f = message.getReqI2cDeviceInit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getReqI2cDeviceDeinit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitRequest.serializeBinaryToWriter
    );
  }
  f = message.getReqI2cDeviceUpdate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateRequest.serializeBinaryToWriter
    );
  }
  f = message.getReqI2cDeviceInitRequests();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequests.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.i2c.v1.I2CBusInitRequest req_i2c_init = 1;
 * @return {?proto.wippersnapper.i2c.v1.I2CBusInitRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cInit = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CBusInitRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CBusInitRequest, 1));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CBusInitRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cInit = function() {
  return this.setReqI2cInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CBusScanRequest req_i2c_scan = 2;
 * @return {?proto.wippersnapper.i2c.v1.I2CBusScanRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cScan = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CBusScanRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CBusScanRequest, 2));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CBusScanRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cScan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cScan = function() {
  return this.setReqI2cScan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cScan = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CBusSetFrequency req_i2c_set_freq = 3;
 * @return {?proto.wippersnapper.i2c.v1.I2CBusSetFrequency}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cSetFreq = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CBusSetFrequency} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CBusSetFrequency, 3));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CBusSetFrequency|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cSetFreq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cSetFreq = function() {
  return this.setReqI2cSetFreq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cSetFreq = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceInitRequest req_i2c_device_init = 4;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceInitRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cDeviceInit = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceInitRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequest, 4));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceInitRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cDeviceInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cDeviceInit = function() {
  return this.setReqI2cDeviceInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cDeviceInit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceDeinitRequest req_i2c_device_deinit = 5;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceDeinitRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cDeviceDeinit = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceDeinitRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitRequest, 5));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceDeinitRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cDeviceDeinit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cDeviceDeinit = function() {
  return this.setReqI2cDeviceDeinit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cDeviceDeinit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceUpdateRequest req_i2c_device_update = 6;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceUpdateRequest}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cDeviceUpdate = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceUpdateRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateRequest, 6));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceUpdateRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cDeviceUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cDeviceUpdate = function() {
  return this.setReqI2cDeviceUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cDeviceUpdate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceInitRequests req_i2c_device_init_requests = 7;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceInitRequests}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.getReqI2cDeviceInitRequests = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceInitRequests} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitRequests, 7));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceInitRequests|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
*/
proto.wippersnapper.signal.v1.I2CRequest.prototype.setReqI2cDeviceInitRequests = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.wippersnapper.signal.v1.I2CRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CRequest} returns this
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.clearReqI2cDeviceInitRequests = function() {
  return this.setReqI2cDeviceInitRequests(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CRequest.prototype.hasReqI2cDeviceInitRequests = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.I2CResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  RESP_I2C_INIT: 1,
  RESP_I2C_SCAN: 2,
  RESP_I2C_DEVICE_INIT: 3,
  RESP_I2C_DEVICE_DEINIT: 4,
  RESP_I2C_DEVICE_UPDATE: 5,
  RESP_I2C_DEVICE_EVENT: 6
};

/**
 * @return {proto.wippersnapper.signal.v1.I2CResponse.PayloadCase}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.I2CResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.I2CResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.I2CResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.I2CResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    respI2cInit: (f = msg.getRespI2cInit()) && wippersnapper_i2c_v1_i2c_pb.I2CBusInitResponse.toObject(includeInstance, f),
    respI2cScan: (f = msg.getRespI2cScan()) && wippersnapper_i2c_v1_i2c_pb.I2CBusScanResponse.toObject(includeInstance, f),
    respI2cDeviceInit: (f = msg.getRespI2cDeviceInit()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitResponse.toObject(includeInstance, f),
    respI2cDeviceDeinit: (f = msg.getRespI2cDeviceDeinit()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitResponse.toObject(includeInstance, f),
    respI2cDeviceUpdate: (f = msg.getRespI2cDeviceUpdate()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateResponse.toObject(includeInstance, f),
    respI2cDeviceEvent: (f = msg.getRespI2cDeviceEvent()) && wippersnapper_i2c_v1_i2c_pb.I2CDeviceEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.I2CResponse;
  return proto.wippersnapper.signal.v1.I2CResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.I2CResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CBusInitResponse;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CBusInitResponse.deserializeBinaryFromReader);
      msg.setRespI2cInit(value);
      break;
    case 2:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CBusScanResponse;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CBusScanResponse.deserializeBinaryFromReader);
      msg.setRespI2cScan(value);
      break;
    case 3:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitResponse;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitResponse.deserializeBinaryFromReader);
      msg.setRespI2cDeviceInit(value);
      break;
    case 4:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitResponse;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitResponse.deserializeBinaryFromReader);
      msg.setRespI2cDeviceDeinit(value);
      break;
    case 5:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateResponse;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateResponse.deserializeBinaryFromReader);
      msg.setRespI2cDeviceUpdate(value);
      break;
    case 6:
      var value = new wippersnapper_i2c_v1_i2c_pb.I2CDeviceEvent;
      reader.readMessage(value,wippersnapper_i2c_v1_i2c_pb.I2CDeviceEvent.deserializeBinaryFromReader);
      msg.setRespI2cDeviceEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.I2CResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.I2CResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.I2CResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRespI2cInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CBusInitResponse.serializeBinaryToWriter
    );
  }
  f = message.getRespI2cScan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CBusScanResponse.serializeBinaryToWriter
    );
  }
  f = message.getRespI2cDeviceInit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitResponse.serializeBinaryToWriter
    );
  }
  f = message.getRespI2cDeviceDeinit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitResponse.serializeBinaryToWriter
    );
  }
  f = message.getRespI2cDeviceUpdate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateResponse.serializeBinaryToWriter
    );
  }
  f = message.getRespI2cDeviceEvent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      wippersnapper_i2c_v1_i2c_pb.I2CDeviceEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.i2c.v1.I2CBusInitResponse resp_i2c_init = 1;
 * @return {?proto.wippersnapper.i2c.v1.I2CBusInitResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getRespI2cInit = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CBusInitResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CBusInitResponse, 1));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CBusInitResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
*/
proto.wippersnapper.signal.v1.I2CResponse.prototype.setRespI2cInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.clearRespI2cInit = function() {
  return this.setRespI2cInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.hasRespI2cInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CBusScanResponse resp_i2c_scan = 2;
 * @return {?proto.wippersnapper.i2c.v1.I2CBusScanResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getRespI2cScan = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CBusScanResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CBusScanResponse, 2));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CBusScanResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
*/
proto.wippersnapper.signal.v1.I2CResponse.prototype.setRespI2cScan = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.clearRespI2cScan = function() {
  return this.setRespI2cScan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.hasRespI2cScan = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceInitResponse resp_i2c_device_init = 3;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceInitResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getRespI2cDeviceInit = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceInitResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceInitResponse, 3));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceInitResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
*/
proto.wippersnapper.signal.v1.I2CResponse.prototype.setRespI2cDeviceInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.clearRespI2cDeviceInit = function() {
  return this.setRespI2cDeviceInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.hasRespI2cDeviceInit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceDeinitResponse resp_i2c_device_deinit = 4;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceDeinitResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getRespI2cDeviceDeinit = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceDeinitResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceDeinitResponse, 4));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceDeinitResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
*/
proto.wippersnapper.signal.v1.I2CResponse.prototype.setRespI2cDeviceDeinit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.clearRespI2cDeviceDeinit = function() {
  return this.setRespI2cDeviceDeinit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.hasRespI2cDeviceDeinit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceUpdateResponse resp_i2c_device_update = 5;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceUpdateResponse}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getRespI2cDeviceUpdate = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceUpdateResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceUpdateResponse, 5));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceUpdateResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
*/
proto.wippersnapper.signal.v1.I2CResponse.prototype.setRespI2cDeviceUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.clearRespI2cDeviceUpdate = function() {
  return this.setRespI2cDeviceUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.hasRespI2cDeviceUpdate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional wippersnapper.i2c.v1.I2CDeviceEvent resp_i2c_device_event = 6;
 * @return {?proto.wippersnapper.i2c.v1.I2CDeviceEvent}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.getRespI2cDeviceEvent = function() {
  return /** @type{?proto.wippersnapper.i2c.v1.I2CDeviceEvent} */ (
    jspb.Message.getWrapperField(this, wippersnapper_i2c_v1_i2c_pb.I2CDeviceEvent, 6));
};


/**
 * @param {?proto.wippersnapper.i2c.v1.I2CDeviceEvent|undefined} value
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
*/
proto.wippersnapper.signal.v1.I2CResponse.prototype.setRespI2cDeviceEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.wippersnapper.signal.v1.I2CResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.I2CResponse} returns this
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.clearRespI2cDeviceEvent = function() {
  return this.setRespI2cDeviceEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.I2CResponse.prototype.hasRespI2cDeviceEvent = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.ServoRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.ServoRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SERVO_ATTACH: 1,
  SERVO_DETACH: 2,
  SERVO_WRITE: 3
};

/**
 * @return {proto.wippersnapper.signal.v1.ServoRequest.PayloadCase}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.ServoRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.ServoRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.ServoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.ServoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.ServoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    servoAttach: (f = msg.getServoAttach()) && wippersnapper_servo_v1_servo_pb.ServoAttachRequest.toObject(includeInstance, f),
    servoDetach: (f = msg.getServoDetach()) && wippersnapper_servo_v1_servo_pb.ServoDetachRequest.toObject(includeInstance, f),
    servoWrite: (f = msg.getServoWrite()) && wippersnapper_servo_v1_servo_pb.ServoWriteRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.ServoRequest}
 */
proto.wippersnapper.signal.v1.ServoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.ServoRequest;
  return proto.wippersnapper.signal.v1.ServoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.ServoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.ServoRequest}
 */
proto.wippersnapper.signal.v1.ServoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_servo_v1_servo_pb.ServoAttachRequest;
      reader.readMessage(value,wippersnapper_servo_v1_servo_pb.ServoAttachRequest.deserializeBinaryFromReader);
      msg.setServoAttach(value);
      break;
    case 2:
      var value = new wippersnapper_servo_v1_servo_pb.ServoDetachRequest;
      reader.readMessage(value,wippersnapper_servo_v1_servo_pb.ServoDetachRequest.deserializeBinaryFromReader);
      msg.setServoDetach(value);
      break;
    case 3:
      var value = new wippersnapper_servo_v1_servo_pb.ServoWriteRequest;
      reader.readMessage(value,wippersnapper_servo_v1_servo_pb.ServoWriteRequest.deserializeBinaryFromReader);
      msg.setServoWrite(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.ServoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.ServoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.ServoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServoAttach();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_servo_v1_servo_pb.ServoAttachRequest.serializeBinaryToWriter
    );
  }
  f = message.getServoDetach();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      wippersnapper_servo_v1_servo_pb.ServoDetachRequest.serializeBinaryToWriter
    );
  }
  f = message.getServoWrite();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      wippersnapper_servo_v1_servo_pb.ServoWriteRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.servo.v1.ServoAttachRequest servo_attach = 1;
 * @return {?proto.wippersnapper.servo.v1.ServoAttachRequest}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.getServoAttach = function() {
  return /** @type{?proto.wippersnapper.servo.v1.ServoAttachRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_servo_v1_servo_pb.ServoAttachRequest, 1));
};


/**
 * @param {?proto.wippersnapper.servo.v1.ServoAttachRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.ServoRequest} returns this
*/
proto.wippersnapper.signal.v1.ServoRequest.prototype.setServoAttach = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.ServoRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.ServoRequest} returns this
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.clearServoAttach = function() {
  return this.setServoAttach(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.hasServoAttach = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional wippersnapper.servo.v1.ServoDetachRequest servo_detach = 2;
 * @return {?proto.wippersnapper.servo.v1.ServoDetachRequest}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.getServoDetach = function() {
  return /** @type{?proto.wippersnapper.servo.v1.ServoDetachRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_servo_v1_servo_pb.ServoDetachRequest, 2));
};


/**
 * @param {?proto.wippersnapper.servo.v1.ServoDetachRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.ServoRequest} returns this
*/
proto.wippersnapper.signal.v1.ServoRequest.prototype.setServoDetach = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wippersnapper.signal.v1.ServoRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.ServoRequest} returns this
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.clearServoDetach = function() {
  return this.setServoDetach(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.hasServoDetach = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional wippersnapper.servo.v1.ServoWriteRequest servo_write = 3;
 * @return {?proto.wippersnapper.servo.v1.ServoWriteRequest}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.getServoWrite = function() {
  return /** @type{?proto.wippersnapper.servo.v1.ServoWriteRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_servo_v1_servo_pb.ServoWriteRequest, 3));
};


/**
 * @param {?proto.wippersnapper.servo.v1.ServoWriteRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.ServoRequest} returns this
*/
proto.wippersnapper.signal.v1.ServoRequest.prototype.setServoWrite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wippersnapper.signal.v1.ServoRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.ServoRequest} returns this
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.clearServoWrite = function() {
  return this.setServoWrite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.ServoRequest.prototype.hasServoWrite = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.ServoResponse.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.ServoResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SERVO_ATTACH_RESP: 1
};

/**
 * @return {proto.wippersnapper.signal.v1.ServoResponse.PayloadCase}
 */
proto.wippersnapper.signal.v1.ServoResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.ServoResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.ServoResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.ServoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.ServoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.ServoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.ServoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    servoAttachResp: (f = msg.getServoAttachResp()) && wippersnapper_servo_v1_servo_pb.ServoAttachResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.ServoResponse}
 */
proto.wippersnapper.signal.v1.ServoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.ServoResponse;
  return proto.wippersnapper.signal.v1.ServoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.ServoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.ServoResponse}
 */
proto.wippersnapper.signal.v1.ServoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_servo_v1_servo_pb.ServoAttachResponse;
      reader.readMessage(value,wippersnapper_servo_v1_servo_pb.ServoAttachResponse.deserializeBinaryFromReader);
      msg.setServoAttachResp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.ServoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.ServoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.ServoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.ServoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServoAttachResp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_servo_v1_servo_pb.ServoAttachResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.servo.v1.ServoAttachResponse servo_attach_resp = 1;
 * @return {?proto.wippersnapper.servo.v1.ServoAttachResponse}
 */
proto.wippersnapper.signal.v1.ServoResponse.prototype.getServoAttachResp = function() {
  return /** @type{?proto.wippersnapper.servo.v1.ServoAttachResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_servo_v1_servo_pb.ServoAttachResponse, 1));
};


/**
 * @param {?proto.wippersnapper.servo.v1.ServoAttachResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.ServoResponse} returns this
*/
proto.wippersnapper.signal.v1.ServoResponse.prototype.setServoAttachResp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.ServoResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.ServoResponse} returns this
 */
proto.wippersnapper.signal.v1.ServoResponse.prototype.clearServoAttachResp = function() {
  return this.setServoAttachResp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.ServoResponse.prototype.hasServoAttachResp = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_ = [[6,15,10,12,7]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  PIN_CONFIGS: 6,
  PIN_EVENT: 15,
  PWM_PIN_CONFIG: 10,
  PWM_PIN_EVENT: 12,
  PIN_EVENTS: 7
};

/**
 * @return {proto.wippersnapper.signal.v1.CreateSignalRequest.PayloadCase}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.CreateSignalRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.CreateSignalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.CreateSignalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pinConfigs: (f = msg.getPinConfigs()) && wippersnapper_pin_v1_pin_pb.ConfigurePinRequests.toObject(includeInstance, f),
    pinEvent: (f = msg.getPinEvent()) && wippersnapper_pin_v1_pin_pb.PinEvent.toObject(includeInstance, f),
    pwmPinConfig: (f = msg.getPwmPinConfig()) && wippersnapper_pin_v1_pin_pb.ConfigurePWMPinRequests.toObject(includeInstance, f),
    pwmPinEvent: (f = msg.getPwmPinEvent()) && wippersnapper_pin_v1_pin_pb.PWMPinEvents.toObject(includeInstance, f),
    pinEvents: (f = msg.getPinEvents()) && wippersnapper_pin_v1_pin_pb.PinEvents.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.CreateSignalRequest;
  return proto.wippersnapper.signal.v1.CreateSignalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.CreateSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new wippersnapper_pin_v1_pin_pb.ConfigurePinRequests;
      reader.readMessage(value,wippersnapper_pin_v1_pin_pb.ConfigurePinRequests.deserializeBinaryFromReader);
      msg.setPinConfigs(value);
      break;
    case 15:
      var value = new wippersnapper_pin_v1_pin_pb.PinEvent;
      reader.readMessage(value,wippersnapper_pin_v1_pin_pb.PinEvent.deserializeBinaryFromReader);
      msg.setPinEvent(value);
      break;
    case 10:
      var value = new wippersnapper_pin_v1_pin_pb.ConfigurePWMPinRequests;
      reader.readMessage(value,wippersnapper_pin_v1_pin_pb.ConfigurePWMPinRequests.deserializeBinaryFromReader);
      msg.setPwmPinConfig(value);
      break;
    case 12:
      var value = new wippersnapper_pin_v1_pin_pb.PWMPinEvents;
      reader.readMessage(value,wippersnapper_pin_v1_pin_pb.PWMPinEvents.deserializeBinaryFromReader);
      msg.setPwmPinEvent(value);
      break;
    case 7:
      var value = new wippersnapper_pin_v1_pin_pb.PinEvents;
      reader.readMessage(value,wippersnapper_pin_v1_pin_pb.PinEvents.deserializeBinaryFromReader);
      msg.setPinEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.CreateSignalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.CreateSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPinConfigs();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      wippersnapper_pin_v1_pin_pb.ConfigurePinRequests.serializeBinaryToWriter
    );
  }
  f = message.getPinEvent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      wippersnapper_pin_v1_pin_pb.PinEvent.serializeBinaryToWriter
    );
  }
  f = message.getPwmPinConfig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      wippersnapper_pin_v1_pin_pb.ConfigurePWMPinRequests.serializeBinaryToWriter
    );
  }
  f = message.getPwmPinEvent();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      wippersnapper_pin_v1_pin_pb.PWMPinEvents.serializeBinaryToWriter
    );
  }
  f = message.getPinEvents();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      wippersnapper_pin_v1_pin_pb.PinEvents.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.pin.v1.ConfigurePinRequests pin_configs = 6;
 * @return {?proto.wippersnapper.pin.v1.ConfigurePinRequests}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.getPinConfigs = function() {
  return /** @type{?proto.wippersnapper.pin.v1.ConfigurePinRequests} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pin_v1_pin_pb.ConfigurePinRequests, 6));
};


/**
 * @param {?proto.wippersnapper.pin.v1.ConfigurePinRequests|undefined} value
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
*/
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.setPinConfigs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.clearPinConfigs = function() {
  return this.setPinConfigs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.hasPinConfigs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional wippersnapper.pin.v1.PinEvent pin_event = 15;
 * @return {?proto.wippersnapper.pin.v1.PinEvent}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.getPinEvent = function() {
  return /** @type{?proto.wippersnapper.pin.v1.PinEvent} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pin_v1_pin_pb.PinEvent, 15));
};


/**
 * @param {?proto.wippersnapper.pin.v1.PinEvent|undefined} value
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
*/
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.setPinEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.clearPinEvent = function() {
  return this.setPinEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.hasPinEvent = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional wippersnapper.pin.v1.ConfigurePWMPinRequests pwm_pin_config = 10;
 * @return {?proto.wippersnapper.pin.v1.ConfigurePWMPinRequests}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.getPwmPinConfig = function() {
  return /** @type{?proto.wippersnapper.pin.v1.ConfigurePWMPinRequests} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pin_v1_pin_pb.ConfigurePWMPinRequests, 10));
};


/**
 * @param {?proto.wippersnapper.pin.v1.ConfigurePWMPinRequests|undefined} value
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
*/
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.setPwmPinConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.clearPwmPinConfig = function() {
  return this.setPwmPinConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.hasPwmPinConfig = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional wippersnapper.pin.v1.PWMPinEvents pwm_pin_event = 12;
 * @return {?proto.wippersnapper.pin.v1.PWMPinEvents}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.getPwmPinEvent = function() {
  return /** @type{?proto.wippersnapper.pin.v1.PWMPinEvents} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pin_v1_pin_pb.PWMPinEvents, 12));
};


/**
 * @param {?proto.wippersnapper.pin.v1.PWMPinEvents|undefined} value
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
*/
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.setPwmPinEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.clearPwmPinEvent = function() {
  return this.setPwmPinEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.hasPwmPinEvent = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional wippersnapper.pin.v1.PinEvents pin_events = 7;
 * @return {?proto.wippersnapper.pin.v1.PinEvents}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.getPinEvents = function() {
  return /** @type{?proto.wippersnapper.pin.v1.PinEvents} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pin_v1_pin_pb.PinEvents, 7));
};


/**
 * @param {?proto.wippersnapper.pin.v1.PinEvents|undefined} value
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
*/
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.setPinEvents = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.wippersnapper.signal.v1.CreateSignalRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.CreateSignalRequest} returns this
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.clearPinEvents = function() {
  return this.setPinEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.CreateSignalRequest.prototype.hasPinEvents = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.SignalResponse.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.SignalResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CONFIGURATION_COMPLETE: 1
};

/**
 * @return {proto.wippersnapper.signal.v1.SignalResponse.PayloadCase}
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.SignalResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.SignalResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.SignalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.SignalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.SignalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    configurationComplete: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.SignalResponse}
 */
proto.wippersnapper.signal.v1.SignalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.SignalResponse;
  return proto.wippersnapper.signal.v1.SignalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.SignalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.SignalResponse}
 */
proto.wippersnapper.signal.v1.SignalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfigurationComplete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.SignalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.SignalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.SignalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool configuration_complete = 1;
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.getConfigurationComplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wippersnapper.signal.v1.SignalResponse} returns this
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.setConfigurationComplete = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.wippersnapper.signal.v1.SignalResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.SignalResponse} returns this
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.clearConfigurationComplete = function() {
  return jspb.Message.setOneofField(this, 1, proto.wippersnapper.signal.v1.SignalResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.SignalResponse.prototype.hasConfigurationComplete = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.PWMRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  ATTACH_REQUEST: 1,
  DETACH_REQUEST: 2,
  WRITE_DUTY_REQUEST: 3,
  WRITE_DUTY_MULTI_REQUEST: 4,
  WRITE_FREQ_REQUEST: 5
};

/**
 * @return {proto.wippersnapper.signal.v1.PWMRequest.PayloadCase}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.PWMRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.PWMRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.PWMRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.PWMRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    attachRequest: (f = msg.getAttachRequest()) && wippersnapper_pwm_v1_pwm_pb.PWMAttachRequest.toObject(includeInstance, f),
    detachRequest: (f = msg.getDetachRequest()) && wippersnapper_pwm_v1_pwm_pb.PWMDetachRequest.toObject(includeInstance, f),
    writeDutyRequest: (f = msg.getWriteDutyRequest()) && wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleRequest.toObject(includeInstance, f),
    writeDutyMultiRequest: (f = msg.getWriteDutyMultiRequest()) && wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleMultiRequest.toObject(includeInstance, f),
    writeFreqRequest: (f = msg.getWriteFreqRequest()) && wippersnapper_pwm_v1_pwm_pb.PWMWriteFrequencyRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.PWMRequest;
  return proto.wippersnapper.signal.v1.PWMRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.PWMRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_pwm_v1_pwm_pb.PWMAttachRequest;
      reader.readMessage(value,wippersnapper_pwm_v1_pwm_pb.PWMAttachRequest.deserializeBinaryFromReader);
      msg.setAttachRequest(value);
      break;
    case 2:
      var value = new wippersnapper_pwm_v1_pwm_pb.PWMDetachRequest;
      reader.readMessage(value,wippersnapper_pwm_v1_pwm_pb.PWMDetachRequest.deserializeBinaryFromReader);
      msg.setDetachRequest(value);
      break;
    case 3:
      var value = new wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleRequest;
      reader.readMessage(value,wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleRequest.deserializeBinaryFromReader);
      msg.setWriteDutyRequest(value);
      break;
    case 4:
      var value = new wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleMultiRequest;
      reader.readMessage(value,wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleMultiRequest.deserializeBinaryFromReader);
      msg.setWriteDutyMultiRequest(value);
      break;
    case 5:
      var value = new wippersnapper_pwm_v1_pwm_pb.PWMWriteFrequencyRequest;
      reader.readMessage(value,wippersnapper_pwm_v1_pwm_pb.PWMWriteFrequencyRequest.deserializeBinaryFromReader);
      msg.setWriteFreqRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.PWMRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.PWMRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.PWMRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttachRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_pwm_v1_pwm_pb.PWMAttachRequest.serializeBinaryToWriter
    );
  }
  f = message.getDetachRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      wippersnapper_pwm_v1_pwm_pb.PWMDetachRequest.serializeBinaryToWriter
    );
  }
  f = message.getWriteDutyRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleRequest.serializeBinaryToWriter
    );
  }
  f = message.getWriteDutyMultiRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleMultiRequest.serializeBinaryToWriter
    );
  }
  f = message.getWriteFreqRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      wippersnapper_pwm_v1_pwm_pb.PWMWriteFrequencyRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.pwm.v1.PWMAttachRequest attach_request = 1;
 * @return {?proto.wippersnapper.pwm.v1.PWMAttachRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.getAttachRequest = function() {
  return /** @type{?proto.wippersnapper.pwm.v1.PWMAttachRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pwm_v1_pwm_pb.PWMAttachRequest, 1));
};


/**
 * @param {?proto.wippersnapper.pwm.v1.PWMAttachRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
*/
proto.wippersnapper.signal.v1.PWMRequest.prototype.setAttachRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.clearAttachRequest = function() {
  return this.setAttachRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.hasAttachRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional wippersnapper.pwm.v1.PWMDetachRequest detach_request = 2;
 * @return {?proto.wippersnapper.pwm.v1.PWMDetachRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.getDetachRequest = function() {
  return /** @type{?proto.wippersnapper.pwm.v1.PWMDetachRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pwm_v1_pwm_pb.PWMDetachRequest, 2));
};


/**
 * @param {?proto.wippersnapper.pwm.v1.PWMDetachRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
*/
proto.wippersnapper.signal.v1.PWMRequest.prototype.setDetachRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.clearDetachRequest = function() {
  return this.setDetachRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.hasDetachRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional wippersnapper.pwm.v1.PWMWriteDutyCycleRequest write_duty_request = 3;
 * @return {?proto.wippersnapper.pwm.v1.PWMWriteDutyCycleRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.getWriteDutyRequest = function() {
  return /** @type{?proto.wippersnapper.pwm.v1.PWMWriteDutyCycleRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleRequest, 3));
};


/**
 * @param {?proto.wippersnapper.pwm.v1.PWMWriteDutyCycleRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
*/
proto.wippersnapper.signal.v1.PWMRequest.prototype.setWriteDutyRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.clearWriteDutyRequest = function() {
  return this.setWriteDutyRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.hasWriteDutyRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional wippersnapper.pwm.v1.PWMWriteDutyCycleMultiRequest write_duty_multi_request = 4;
 * @return {?proto.wippersnapper.pwm.v1.PWMWriteDutyCycleMultiRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.getWriteDutyMultiRequest = function() {
  return /** @type{?proto.wippersnapper.pwm.v1.PWMWriteDutyCycleMultiRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pwm_v1_pwm_pb.PWMWriteDutyCycleMultiRequest, 4));
};


/**
 * @param {?proto.wippersnapper.pwm.v1.PWMWriteDutyCycleMultiRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
*/
proto.wippersnapper.signal.v1.PWMRequest.prototype.setWriteDutyMultiRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.clearWriteDutyMultiRequest = function() {
  return this.setWriteDutyMultiRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.hasWriteDutyMultiRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional wippersnapper.pwm.v1.PWMWriteFrequencyRequest write_freq_request = 5;
 * @return {?proto.wippersnapper.pwm.v1.PWMWriteFrequencyRequest}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.getWriteFreqRequest = function() {
  return /** @type{?proto.wippersnapper.pwm.v1.PWMWriteFrequencyRequest} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pwm_v1_pwm_pb.PWMWriteFrequencyRequest, 5));
};


/**
 * @param {?proto.wippersnapper.pwm.v1.PWMWriteFrequencyRequest|undefined} value
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
*/
proto.wippersnapper.signal.v1.PWMRequest.prototype.setWriteFreqRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.wippersnapper.signal.v1.PWMRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.PWMRequest} returns this
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.clearWriteFreqRequest = function() {
  return this.setWriteFreqRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.PWMRequest.prototype.hasWriteFreqRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wippersnapper.signal.v1.PWMResponse.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.wippersnapper.signal.v1.PWMResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  ATTACH_RESPONSE: 1
};

/**
 * @return {proto.wippersnapper.signal.v1.PWMResponse.PayloadCase}
 */
proto.wippersnapper.signal.v1.PWMResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.wippersnapper.signal.v1.PWMResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.wippersnapper.signal.v1.PWMResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.signal.v1.PWMResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.signal.v1.PWMResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.signal.v1.PWMResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.PWMResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    attachResponse: (f = msg.getAttachResponse()) && wippersnapper_pwm_v1_pwm_pb.PWMAttachResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.signal.v1.PWMResponse}
 */
proto.wippersnapper.signal.v1.PWMResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.signal.v1.PWMResponse;
  return proto.wippersnapper.signal.v1.PWMResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.signal.v1.PWMResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.signal.v1.PWMResponse}
 */
proto.wippersnapper.signal.v1.PWMResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new wippersnapper_pwm_v1_pwm_pb.PWMAttachResponse;
      reader.readMessage(value,wippersnapper_pwm_v1_pwm_pb.PWMAttachResponse.deserializeBinaryFromReader);
      msg.setAttachResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.signal.v1.PWMResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.signal.v1.PWMResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.signal.v1.PWMResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.signal.v1.PWMResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttachResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      wippersnapper_pwm_v1_pwm_pb.PWMAttachResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional wippersnapper.pwm.v1.PWMAttachResponse attach_response = 1;
 * @return {?proto.wippersnapper.pwm.v1.PWMAttachResponse}
 */
proto.wippersnapper.signal.v1.PWMResponse.prototype.getAttachResponse = function() {
  return /** @type{?proto.wippersnapper.pwm.v1.PWMAttachResponse} */ (
    jspb.Message.getWrapperField(this, wippersnapper_pwm_v1_pwm_pb.PWMAttachResponse, 1));
};


/**
 * @param {?proto.wippersnapper.pwm.v1.PWMAttachResponse|undefined} value
 * @return {!proto.wippersnapper.signal.v1.PWMResponse} returns this
*/
proto.wippersnapper.signal.v1.PWMResponse.prototype.setAttachResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wippersnapper.signal.v1.PWMResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.signal.v1.PWMResponse} returns this
 */
proto.wippersnapper.signal.v1.PWMResponse.prototype.clearAttachResponse = function() {
  return this.setAttachResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.signal.v1.PWMResponse.prototype.hasAttachResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


export default proto.wippersnapper.signal.v1
