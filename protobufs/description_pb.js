// source: wippersnapper/description/v1/description.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

import jspb from 'google-protobuf'
var goog = jspb;
var global = Function('return this')();

import nanopb_nanopb_pb from './nanopb_pb.js'
goog.object.extend(proto, nanopb_nanopb_pb);
goog.exportSymbol('proto.wippersnapper.description.v1.CreateDescriptionRequest', null, global);
goog.exportSymbol('proto.wippersnapper.description.v1.CreateDescriptionRequest.Version', null, global);
goog.exportSymbol('proto.wippersnapper.description.v1.CreateDescriptionResponse', null, global);
goog.exportSymbol('proto.wippersnapper.description.v1.CreateDescriptionResponse.Response', null, global);
goog.exportSymbol('proto.wippersnapper.description.v1.GetDefinitionRequest', null, global);
goog.exportSymbol('proto.wippersnapper.description.v1.GetDefinitionResponse', null, global);
goog.exportSymbol('proto.wippersnapper.description.v1.RegistrationComplete', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wippersnapper.description.v1.CreateDescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.description.v1.CreateDescriptionRequest.displayName = 'proto.wippersnapper.description.v1.CreateDescriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wippersnapper.description.v1.CreateDescriptionRequest.Version, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.displayName = 'proto.wippersnapper.description.v1.CreateDescriptionRequest.Version';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wippersnapper.description.v1.CreateDescriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.description.v1.CreateDescriptionResponse.displayName = 'proto.wippersnapper.description.v1.CreateDescriptionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.description.v1.RegistrationComplete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wippersnapper.description.v1.RegistrationComplete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.description.v1.RegistrationComplete.displayName = 'proto.wippersnapper.description.v1.RegistrationComplete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.description.v1.GetDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wippersnapper.description.v1.GetDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.description.v1.GetDefinitionRequest.displayName = 'proto.wippersnapper.description.v1.GetDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wippersnapper.description.v1.GetDefinitionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wippersnapper.description.v1.GetDefinitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wippersnapper.description.v1.GetDefinitionResponse.displayName = 'proto.wippersnapper.description.v1.GetDefinitionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.description.v1.CreateDescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    machineName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    macAddr: jspb.Message.getFieldWithDefault(msg, 2, 0),
    usbVid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    usbPid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    version: (f = msg.getVersion()) && proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.toObject(includeInstance, f),
    verMajor: jspb.Message.getFieldWithDefault(msg, 10, 0),
    verMinor: jspb.Message.getFieldWithDefault(msg, 11, 0),
    verPatch: jspb.Message.getFieldWithDefault(msg, 12, 0),
    verPreRelease: jspb.Message.getFieldWithDefault(msg, 13, ""),
    verBuild: jspb.Message.getFieldWithDefault(msg, 14, 0),
    strVersion: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.description.v1.CreateDescriptionRequest;
  return proto.wippersnapper.description.v1.CreateDescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMachineName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMacAddr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUsbVid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUsbPid(value);
      break;
    case 5:
      var value = new proto.wippersnapper.description.v1.CreateDescriptionRequest.Version;
      reader.readMessage(value,proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerMajor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerMinor(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerPatch(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerPreRelease(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerBuild(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.description.v1.CreateDescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMachineName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMacAddr();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUsbVid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUsbPid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.serializeBinaryToWriter
    );
  }
  f = message.getVerMajor();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getVerMinor();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getVerPatch();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getVerPreRelease();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getVerBuild();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getStrVersion();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.toObject = function(includeInstance, msg) {
  var f, obj = {
    major: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    micro: jspb.Message.getFieldWithDefault(msg, 3, 0),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    verMajor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    verMinor: jspb.Message.getFieldWithDefault(msg, 6, 0),
    verPatch: jspb.Message.getFieldWithDefault(msg, 7, 0),
    verPreRelease: jspb.Message.getFieldWithDefault(msg, 8, ""),
    verBuild: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.description.v1.CreateDescriptionRequest.Version;
  return proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMajor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMicro(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerMajor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerMinor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerPatch(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerPreRelease(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerBuild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMajor();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMinor();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getMicro();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVerMajor();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVerMinor();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getVerPatch();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getVerPreRelease();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVerBuild();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional uint64 major = 1;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 minor = 2;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 micro = 3;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getMicro = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setMicro = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 ver_major = 5;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getVerMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setVerMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 ver_minor = 6;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getVerMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setVerMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 ver_patch = 7;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getVerPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setVerPatch = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string ver_pre_release = 8;
 * @return {string}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getVerPreRelease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setVerPreRelease = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 ver_build = 9;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.getVerBuild = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.Version.prototype.setVerBuild = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string machine_name = 1;
 * @return {string}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getMachineName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setMachineName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 mac_addr = 2;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getMacAddr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setMacAddr = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 usb_vid = 3;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getUsbVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setUsbVid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 usb_pid = 4;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getUsbPid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setUsbPid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Version version = 5;
 * @return {?proto.wippersnapper.description.v1.CreateDescriptionRequest.Version}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getVersion = function() {
  return /** @type{?proto.wippersnapper.description.v1.CreateDescriptionRequest.Version} */ (
    jspb.Message.getWrapperField(this, proto.wippersnapper.description.v1.CreateDescriptionRequest.Version, 5));
};


/**
 * @param {?proto.wippersnapper.description.v1.CreateDescriptionRequest.Version|undefined} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
*/
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 ver_major = 10;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getVerMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setVerMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 ver_minor = 11;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getVerMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setVerMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 ver_patch = 12;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getVerPatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setVerPatch = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string ver_pre_release = 13;
 * @return {string}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getVerPreRelease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setVerPreRelease = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 ver_build = 14;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getVerBuild = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setVerBuild = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string str_version = 15;
 * @return {string}
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.getStrVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionRequest} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionRequest.prototype.setStrVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.description.v1.CreateDescriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalGpioPins: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalAnalogPins: jspb.Message.getFieldWithDefault(msg, 3, 0),
    referenceVoltage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    totalI2cPorts: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.description.v1.CreateDescriptionResponse;
  return proto.wippersnapper.description.v1.CreateDescriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.wippersnapper.description.v1.CreateDescriptionResponse.Response} */ (reader.readEnum());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalGpioPins(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalAnalogPins(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setReferenceVoltage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalI2cPorts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.description.v1.CreateDescriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTotalGpioPins();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalAnalogPins();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getReferenceVoltage();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getTotalI2cPorts();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.Response = {
  RESPONSE_UNSPECIFIED: 0,
  RESPONSE_OK: 1,
  RESPONSE_BOARD_NOT_FOUND: 2
};

/**
 * optional Response response = 1;
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse.Response}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.getResponse = function() {
  return /** @type {!proto.wippersnapper.description.v1.CreateDescriptionResponse.Response} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.wippersnapper.description.v1.CreateDescriptionResponse.Response} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 total_gpio_pins = 2;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.getTotalGpioPins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.setTotalGpioPins = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 total_analog_pins = 3;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.getTotalAnalogPins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.setTotalAnalogPins = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional float reference_voltage = 4;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.getReferenceVoltage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.setReferenceVoltage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 total_i2c_ports = 5;
 * @return {number}
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.getTotalI2cPorts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.wippersnapper.description.v1.CreateDescriptionResponse} returns this
 */
proto.wippersnapper.description.v1.CreateDescriptionResponse.prototype.setTotalI2cPorts = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.description.v1.RegistrationComplete.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.description.v1.RegistrationComplete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.description.v1.RegistrationComplete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.RegistrationComplete.toObject = function(includeInstance, msg) {
  var f, obj = {
    isComplete: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.description.v1.RegistrationComplete}
 */
proto.wippersnapper.description.v1.RegistrationComplete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.description.v1.RegistrationComplete;
  return proto.wippersnapper.description.v1.RegistrationComplete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.description.v1.RegistrationComplete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.description.v1.RegistrationComplete}
 */
proto.wippersnapper.description.v1.RegistrationComplete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsComplete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.description.v1.RegistrationComplete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.description.v1.RegistrationComplete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.description.v1.RegistrationComplete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.RegistrationComplete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsComplete();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_complete = 1;
 * @return {boolean}
 */
proto.wippersnapper.description.v1.RegistrationComplete.prototype.getIsComplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.wippersnapper.description.v1.RegistrationComplete} returns this
 */
proto.wippersnapper.description.v1.RegistrationComplete.prototype.setIsComplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.description.v1.GetDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.description.v1.GetDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.description.v1.GetDefinitionRequest}
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.description.v1.GetDefinitionRequest;
  return proto.wippersnapper.description.v1.GetDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.description.v1.GetDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.description.v1.GetDefinitionRequest}
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.description.v1.GetDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.description.v1.GetDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string data = 1;
 * @return {string}
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.GetDefinitionRequest} returns this
 */
proto.wippersnapper.description.v1.GetDefinitionRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wippersnapper.description.v1.GetDefinitionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wippersnapper.description.v1.GetDefinitionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    boardDefinition: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wippersnapper.description.v1.GetDefinitionResponse}
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wippersnapper.description.v1.GetDefinitionResponse;
  return proto.wippersnapper.description.v1.GetDefinitionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wippersnapper.description.v1.GetDefinitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wippersnapper.description.v1.GetDefinitionResponse}
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wippersnapper.description.v1.GetDefinitionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wippersnapper.description.v1.GetDefinitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoardDefinition();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string board_definition = 1;
 * @return {string}
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.prototype.getBoardDefinition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wippersnapper.description.v1.GetDefinitionResponse} returns this
 */
proto.wippersnapper.description.v1.GetDefinitionResponse.prototype.setBoardDefinition = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


export default proto.wippersnapper.description.v1
