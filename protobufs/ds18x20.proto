// SPDX-FileCopyrightText: 2023 Brent Rubell for Adafruit Industries
// SPDX-License-Identifier: MIT
// WipperSnapper's Protobuf communication API for DS18X20 Maxim Temperature ICs
syntax = "proto3";
package wippersnapper.ds18x20;
import "sensor.proto";

/**
* Ds18x20Add represents a  to initialize
* a DS18X20 Maxim temperature sensor, from the broker.
* NOTE: This API currently only supports ONE device per OneWire bus.
*/
message Ds18x20Add {
  string onewire_pin                                               = 1; /** The desired pin to use as a OneWire bus. */
  int32  sensor_resolution                                         = 2; /** The desired sensor resolution (9, 10, 11, or 12 bits). */
  repeated wippersnapper.sensor.SensorProperties sensor_properties = 3; /** Properties for the DS18x20 sensor. */
}

/**
* Ds18x20AddDs18x20AddedResponse represents a device's response
* to a Ds18x20Add message.
*/
message Ds18x20Added {
  bool is_initialized  = 1; /** True if the 1-wire bus has been initialized successfully, False otherwise. */
  string onewire_pin   = 2; /** The pin being used as a OneWire bus. */
}

/**
* Ds18x20Remove represents a  to de-initialize a DS18X20
* Maxim temperature sensor, from the broker.
*/
message Ds18x20Remove {
  string onewire_pin  = 1; /** The desired onewire bus to de-initialize a DS18x sensor on and release. */
}

/**
* Ds18x20Event event represents data from **one** DS18X20 sensor.
*/
message Ds18x20Event {
  string onewire_pin                                         = 1; /** The desired pin to use as a OneWire bus. */
  repeated wippersnapper.sensor.SensorEvent sensor_events = 2; /** The DS18X20's SensorEvent. */
}
